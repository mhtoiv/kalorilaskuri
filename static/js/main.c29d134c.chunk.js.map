{"version":3,"sources":["ingredientsJSON.js","Components/Search.js","Components/Display.js","App.js","index.js"],"names":["ingredients","name","energy","weight","fats","sfats","carbs","sugars","protein","salt","Search","selected","setSelected","ingredientsJSON","useState","search","setSearch","type","placeholder","onChange","e","target","value","filter","ingredient","includes","map","onClick","concat","Ingredient","updateValues","className","ingr","autoComplete","min","max","id","updateWeight","Display","grams","total","setTotal","forEach","current","parseFloat","toFixed","App","useEffect","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c29d134c.chunk.js","sourcesContent":["const ingredients = [\r\n    {\r\n        name: \"vesi\",\r\n        energy: 0,\r\n        weight: 0,\r\n        fats: 0,\r\n        sfats: 0,\r\n        carbs: 0,\r\n        sugars: 0,\r\n        protein: 0,\r\n        salt: 0\r\n    },\r\n    {\r\n        name: \"vehnäjauho\",\r\n        energy: 345,\r\n        weight: 0,\r\n        fats: 2,\r\n        sfats: 0.4,\r\n        carbs: 66,\r\n        sugars: 0.4,\r\n        protein: 13,\r\n        salt: 0.01\r\n    },\r\n    {\r\n        name: \"rasvaton maito\",\r\n        energy: 34,\r\n        weight: 0,\r\n        fats: 0,\r\n        sfats: 0,\r\n        carbs: 4.9,\r\n        sugars: 4.9,\r\n        protein: 3.5,\r\n        salt: 0.1\r\n    },\r\n    {\r\n        name: \"kevytmaito\",\r\n        energy: 47,\r\n        weight: 0,\r\n        fats: 1.5,\r\n        sfats: 1,\r\n        carbs: 4.8,\r\n        sugars: 4.8,\r\n        protein: 3.5,\r\n        salt: 0.1\r\n    },\r\n    {\r\n        name: \"kidesokeri\",\r\n        energy: 406,\r\n        weight: 0,\r\n        fats: 0,\r\n        sfats: 0,\r\n        carbs: 99.9,\r\n        sugars: 99.9,\r\n        protein: 0,\r\n        salt: 0\r\n    },\r\n    {\r\n        name: \"makaroni\",\r\n        energy: 348,\r\n        weight: 0,\r\n        fats: 1.6,\r\n        sfats: 0.4,\r\n        carbs: 68,\r\n        sugars: 2.5,\r\n        protein: 13,\r\n        salt: 0.01\r\n    },{\r\n        name: \"voi\",\r\n        energy: 713,\r\n        weight: 0,\r\n        fats: 80,\r\n        sfats: 47,\r\n        carbs: 0.8,\r\n        sugars: 0.8,\r\n        protein: 0.6,\r\n        salt: 1.4\r\n    },{\r\n        name: \"hunaja\",\r\n        energy: 334,\r\n        weight: 0,\r\n        fats: 0,\r\n        sfats: 0,\r\n        carbs: 80.8,\r\n        sugars: 80.8,\r\n        protein: 0.5,\r\n        salt: 0\r\n    },\r\n    {\r\n        name: \"kuivahiiva\",\r\n        energy: 205,\r\n        weight: 0,\r\n        fats: 1.8,\r\n        sfats: 0,\r\n        carbs: 0.9,\r\n        sugars: 0,\r\n        protein: 45.8,\r\n        salt: 0\r\n    },\r\n    {\r\n        name: \"oliiviöljy\",\r\n        energy: 884,\r\n        weight: 0,\r\n        fats: 100,\r\n        sfats: 14,\r\n        carbs: 0,\r\n        sugars: 0,\r\n        protein: 0,\r\n        salt: 0\r\n    },\r\n    {\r\n        name: \"suola\",\r\n        energy: 3,\r\n        weight: 0,\r\n        fats: 0,\r\n        sfats: 0,\r\n        carbs: 0,\r\n        sugars: 0,\r\n        protein: 0.6,\r\n        salt: 0\r\n    }\r\n    ]\r\n\r\n\r\nexport default ingredients;","import React, {useState} from 'react';\r\nimport ingredientsJSON from \"../ingredientsJSON\";\r\n\r\nconst Search = ({selected, setSelected}) =>{\r\n\r\n    const ingredients = ingredientsJSON;\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2>\r\n                    Hae ainesosia\r\n                </h2>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"text\" placeholder=\"Kirjoita hakeaksesi aineosaa...\" onChange={(e) =>\r\n                    setSearch(e.target.value)}/>\r\n            </div>\r\n\r\n            <div>\r\n                {search === \"\" ?\r\n                    <p/>\r\n                    :\r\n                    ingredients\r\n                        .filter(ingredient => ingredient.name.includes(search))\r\n                        .map(ingredient =>\r\n                            <button onClick={() => setSelected(selected.concat(ingredient))}>{ingredient.name}</button>\r\n                        )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, {useState} from 'react';\r\n\r\n\r\n\r\nconst Ingredient = ({ingredient, selected, setSelected, updateValues}) => {\r\n\r\n    const updateWeight = (e) => {\r\n        ingredient.weight = e.target.value;\r\n        updateValues();\r\n    }\r\n\r\n    const removeIngredient = () => {\r\n        ingredient.weight = 0;\r\n        setSelected(selected.filter(ingr => ingr !== ingredient));\r\n        updateValues();\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"flex name\">\r\n                <h3>{ingredient.name}</h3>\r\n                <button onClick={() => removeIngredient()}>X</button>\r\n            </div>\r\n\r\n            <div className=\"flex amount\">\r\n                <input autoComplete=\"off\" type=\"number\" min=\"0\" max=\"50000\" placeholder=\"esim. 100\" id=\"input\" onChange={(e) => updateWeight(e)}/>\r\n                <p>g</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Display = ({selected, setSelected}) => {\r\n\r\n    const [total, setTotal] = useState({grams: 0,\r\n        energy: 0, fats: 0, sfats: 0, carbs: 0, sugars: 0, protein: 0, salt: 0});\r\n\r\n    const updateValues = () => {\r\n        let grams = 0;\r\n        let energy = 0;\r\n        let fats = 0;\r\n        let sfats = 0;\r\n        let carbs = 0;\r\n        let sugars = 0;\r\n        let protein = 0;\r\n        let salt = 0;\r\n\r\n        selected.forEach(function(current){\r\n            grams += parseFloat(current.weight);\r\n            energy += (current.energy/100*current.weight);\r\n            fats += (current.fats/100*current.weight)\r\n            sfats += (current.sfats/100*current.weight);\r\n            carbs += (current.carbs/100*current.weight);\r\n            sugars += (current.sugars/100*current.weight);\r\n            protein += (current.sugars/100*current.weight);\r\n            salt += (current.salt/100*current.weight);\r\n        });\r\n        setTotal({grams: grams, energy: parseFloat(energy.toFixed(1)),\r\n            fats: parseFloat(fats.toFixed(1)), sfats: parseFloat(sfats.toFixed(1)),\r\n            carbs: parseFloat(carbs.toFixed(1)), sugars: parseFloat(sugars.toFixed(1)),\r\n            protein: parseFloat(protein.toFixed(1)), salt: parseFloat(salt.toFixed(2))})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                {selected\r\n                    .map(ingredient =>\r\n                        <Ingredient ingredient={ingredient}\r\n                                    selected={selected}\r\n                                    setSelected={setSelected}\r\n                                    updateValues={updateValues}\r\n\r\n\r\n                        />)}\r\n            </div>\r\n            <div className=\"total\">\r\n                <p>Yhteensä: {total.grams} g</p>\r\n                <p>Energiaa: {total.energy} kcal</p>\r\n                <p>Rasvaa: {total.fats} g</p>\r\n                <p>- josta tyydyttynyttä: {total.sfats} g</p>\r\n                <p>Hiilihydraatteja: {total.carbs} g</p>\r\n                <p>- josta sokereita: {total.sugars} g</p>\r\n                <p>Proteiiniä: {total.protein} g</p>\r\n                <p>Suolaa: {total.salt} g</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React, {useEffect, useState} from 'react';\nimport Search from \"./Components/Search\";\nimport Display from \"./Components/Display\";\n\n\nfunction App() {\n\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        console.log(\"selected updated\");\n    }, [selected])\n  return (\n    <div className=\"relative\">\n\n      <header>\n          <h1>\n              Kalorilaskuri\n          </h1>\n      </header>\n\n        <div className=\"container\">\n\n            <div className=\"flex-nocenter\">\n\n                <div className=\"search-box\">\n                    <Search selected={selected} setSelected={setSelected}/>\n                </div>\n\n                <div className=\"info-box\">\n                    <Display selected={selected} setSelected={setSelected}/>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}